ylab("Average Slope") +
xlab("Sensorimotor Reaction Time (s)")
ggplot(task.data, aes(x=mean.rt, y=average.slope, color=age)) +
geom_smooth(method=lm, color='gray') +
geom_point(size=1.5, show.legend=FALSE) +
scale_color_viridis(guide=FALSE) +
theme_minimal() +
theme(axis.text.y = element_text(face="bold", size=6, angle=90),
axis.text.x = element_text(face="bold", size=6)) +
ylab("Average Slope") +
xlab("Sensorimotor Reaction Time (s)")
?gather
library(dplyr)
?gather
library(tidyr)
?gather
read_csv('../csv/agesplit-spectra.csv')
age.split.spectra <- read_csv('../csv/agesplit-spectra.csv') %>%
gather(frequency, power, -pid, -group)
age.split.spectra
age.split.spectra <- read_csv('../csv/agesplit-spectra.csv') %>%
gather(frequency, power, -pid, -group) %>%
mutate(frequency = as.numeric(frequency))
ggplot(age.split.spectra, aes(x=frequency, y=power, group=group, color=group)) +
geom_line()
ggplot(age.split.spectra, aes(x=frequency, y=power, group=group, color=group)) +
geom_line()
ggplot(age.split.spectra, aes(x=frequency, y=power, group=group, color=group)) +
stat_summary(fun.y='mean', geom = 'line')
ggplot(age.split.spectra, aes(x=frequency, y=power, group=group, color=group)) +
stat_summary(fun.y='mean', geom = 'line')
geom_area
?geom_area
ggplot(age.split.spectra, aes(x=frequency, y=power, group=group, color=group)) +
stat_summary(fun.y='mean', geom = 'line') +
geom_ribbon(fun.data='mean_se')
ggplot(age.split.spectra, aes(x=frequency, y=power, group=group, color=group)) +
stat_summary(fun.y='mean', geom = 'line') +
geom_ribbon(stat='mean_se')
ggplot(age.split.spectra, aes(x=frequency, y=power, group=group, color=group)) +
stat_summary(fun.y='mean', geom = 'line') +
geom_ribbon(stat='summary', fun.data='mean_se')
ggplot(age.split.spectra, aes(x=frequency, y=power, group=group, color=group)) +
stat_summary(fun.y='mean', geom = 'line') +
geom_ribbon(stat='summary', fun.data='mean_se', aes(fill=group), alpha=0.3)
geom_ribbon
?geom_ribbon
ggplot(age.split.spectra, aes(x=frequency, y=power, group=group, color=group)) +
stat_summary(fun.y='mean', geom = 'line') +
geom_ribbon(stat='summary', fun.data='mean_se', aes(fill=group), alpha=0.3, size=0)
ggplot(age.split.spectra, aes(x=frequency, y=power, group=group, color=group)) +
stat_summary(fun.y='mean', geom = 'line') +
geom_ribbon(stat='summary', fun.data='mean_se', aes(fill=group), alpha=0.3, size=0) +
theme(axis.text.y = element_text(face="bold", size=6, angle=90),
axis.text.x = element_text(face="bold", size=6),
legend.position = 'bottom') +
ylab("Power") +
xlab("Frequency")
ggplot(age.split.spectra, aes(x=frequency, y=power, group=group, color=group)) +
stat_summary(fun.y='mean', geom = 'line') +
geom_ribbon(stat='summary', fun.data='mean_se', aes(fill=group), alpha=0.3, size=0) +
theme(axis.text.y = element_text(face="bold", size=6, angle=90),
axis.text.x = element_text(face="bold", size=6),
legend.position = c(0.9, 0.9)) +
ylab("Power") +
xlab("Frequency")
ggplot(age.split.spectra, aes(x=frequency, y=power, group=group, color=group)) +
stat_summary(fun.y='mean', geom = 'line') +
geom_ribbon(stat='summary', fun.data='mean_se', aes(fill=group), alpha=0.3, size=0) +
theme(axis.text.y = element_text(face="bold", size=6, angle=90),
axis.text.x = element_text(face="bold", size=6),
legend.position = c(0.9, 0.9),
legent.title = FALSE) +
ylab("Power") +
xlab("Frequency")
ggplot(age.split.spectra, aes(x=frequency, y=power, group=group, color=group)) +
stat_summary(fun.y='mean', geom = 'line') +
geom_ribbon(stat='summary', fun.data='mean_se', aes(fill=group), alpha=0.3, size=0) +
theme(axis.text.y = element_text(face="bold", size=6, angle=90),
axis.text.x = element_text(face="bold", size=6),
legend.position = c(0.9, 0.9),
legend.title = FALSE) +
ylab("Power") +
xlab("Frequency")
ggplot(age.split.spectra, aes(x=frequency, y=power, group=group, color=group)) +
stat_summary(fun.y='mean', geom = 'line') +
geom_ribbon(stat='summary', fun.data='mean_se', aes(fill=group), alpha=0.3, size=0) +
theme(axis.text.y = element_text(face="bold", size=6, angle=90),
axis.text.x = element_text(face="bold", size=6),
legend.position = c(0.9, 0.9),
legend.title = element_blank()) +
ylab("Power") +
xlab("Frequency")
ggplot(age.split.spectra, aes(x=frequency, y=power, group=group, color=group)) +
stat_summary(fun.y='mean', geom = 'line') +
geom_ribbon(stat='summary', fun.data='mean_se', aes(fill=group), alpha=0.3, size=0) +
theme_bw() +
theme(axis.text.y = element_text(face="bold", size=6, angle=90),
axis.text.x = element_text(face="bold", size=6),
legend.position = c(0.85, 0.85),
legend.title = element_blank()) +
ylab("Power") +
xlab("Frequency")
?theme
?element_rect
ggplot(age.split.spectra, aes(x=frequency, y=power, group=group, color=group)) +
stat_summary(fun.y='mean', geom = 'line') +
geom_ribbon(stat='summary', fun.data='mean_se',
aes(fill=group), alpha=0.3, size=0,
show.legend = FALSE) +
theme_bw() +
theme(axis.text.y = element_text(face="bold", size=6, angle=90),
axis.text.x = element_text(face="bold", size=6),
legend.position = c(0.85, 0.85),
legend.title = element_blank(),
legend.background = element_blank()) +
ylab("Power") +
xlab("Frequency")
task.data
0.1 * 204
read_csv('../csv/task.csv')
read_csv('../csv/task.csv')
filter(removed_elecs < 0.2*204)
read_csv('../csv/task.csv') %>%
filter(removed_elecs < 0.2*204)
read_csv('../csv/task.csv') %>%
filter(removed_elecs < 0.1*204)
?cor.test()
task.data %$% cor.test(age, agerage.slope, method='pearson')
task.data %$% cor.test(age, average.slope, method='pearson')
a <- task.data %$% cor.test(age, average.slope, method='pearson')
a
a[1]
a["p.value"]
a$p.value
# for plotting:
library(png)
library(grid)
library(gridExtra)
library(jpeg)
library(ggplot2)
library(viridis)
# for data processing:
library(readr)
library(stringr)
library(dplyr)
library(tidyr)
library(magrittr)
# load the data for the two MEG recordings
task.data <- read_csv('../csv/task.csv') %>%
filter(removed_elecs < 0.2*204)
rest.data <- read_csv('../csv/rest.csv') %>%
filter(removed_elecs < 0.2*204)
both.data <- inner_join(task.data, rest.data, by=c('pid', 'sex', 'age'), suffix=c('.task', '.rest'))
task.data <- inner_join(task.data, read_csv('../csv/megbehavior.csv'))  # add the behavioral data
# load the spectrum data for age split:
age.split.spectra <- read_csv('../csv/agesplit-spectra.csv') %>%
# gather(frequency, power, -pid, -group) %>%
mutate(frequency = as.numeric(frequency))
age.slope.cor <- task.data %$% cor.test(age, average.slope, method='p')
age.slope.cor
age.slope.cor %$% paste0("$r=", cor, ", p=", p.value, "$")
age.slope.cor %$% paste0("$r=", as.character(cor), ", p=", p.value, "$")
age.slope.cor$estimate
age.slope.cor$estimate$cor
age.slope.cor$estimate
age.slope.cor$estimate['cor']
age.slope.cor$cor
age.slope.cor$estimate
as.character(age.slope.cor$estimate)
as.character(round(age.slope.cor$estimate, digit=2))
as.character(round(age.slope.cor$estimate, digit=3))
as.character(round(age.slope.cor$estimate, digit=4))
as.character(round(age.slope.cor$estimate, digit=3))
age.slope.cor %$% paste0("$r=", round(estimate, digit=3), ", p=", round(p.value, digit=3), "$")
install.packages('apa')
library(apa)
cor_apa
cor_apa(age.slope.cor)
paste0("$", cor_apa(age.slope.cor), "$")
cor_apa(age.slope.cor)
cor_apa(age.slope.cor, format='rmarkdown')
cor_apa(age.slope.cor, format='latex')
cor_apa(age.slope.cor, format='plotmath')
cor_apa(age.slope.cor, format='rmarkdown')
test <- cor_apa(age.slope.cor, format='rmarkdown')
test
apa(age.slope.cor)
apa(age.slope.cor)
apa(age.slope.cor, format='latex')
apa(age.slope.cor)
apa(age.slope.cor, format='text')
fmt_tex <- function(text){
paste0("$", text, "$")
}
apa(age.slope.cor, format='text')
fmt_tex(apa(age.slope.cor, format='text'))
fmt_tex <- function(text){
paste0("$", text, "$")
}
age.slope.cor <- task.data %$% fmt_tex(apa(cor.test(age, average.slope, method='p'), format='text'))
rt.slope.cor <- task.data %$% fmt_tex(apa(cor.test(mean.rt, average.slope, method='p'), format='text'))
age.slope.cor
?substr()
?str_replace()
age.slope.cor
str_replace(age.slope.cor, ', ', '$, $')
read_csv('../csv/vstm-behavior.csv')
?rename
read_csv('../csv/vstm-behavior.csv') %>%
rename(CCID = pid)
read_csv('../csv/vstm-behavior.csv') %>%
rename(pid = CCID)
read_csv('../csv/vstm-behavior.csv') %>%
rename(pid = CCID) %>% inner_join(task.data)
p <- ggplot(task.data, aes(x=mean.rt, y=average.slope, color=age)) +
geom_smooth(method=lm, color='gray') +
geom_point(size=1.2, show.legend=FALSE) +
scale_color_viridis() +
theme_bw() +
theme(axis.text.y = element_text(face="bold", size=6, angle=90),
axis.text.x = element_text(face="bold", size=6),
legend.position = 'bottom') +
ylab("Average Slope") +
xlab("Sensorimotor Reaction Time (s)")
p
ggplot(task.data, aes(x=mean.rt, y=average.slope, color=age)) +
geom_smooth(method=lm, color='gray') +
geom_point(size=1.2, show.legend=FALSE) +
scale_color_viridis() +
theme_bw() +
theme(axis.text.y = element_text(face="bold", size=6, angle=90),
axis.text.x = element_text(face="bold", size=6),
legend.position = 'bottom') +
ylab("Average Slope") +
xlab("Sensorimotor Reaction Time (s)")
ggplot(task.data, aes(x=mean.rt, y=average.slope, color=age)) +
geom_smooth(method=lm, color='gray') +
geom_point(size=1.2) +
scale_color_viridis() +
theme_bw() +
theme(axis.text.y = element_text(face="bold", size=6, angle=90),
axis.text.x = element_text(face="bold", size=6),
legend.position = 'bottom') +
ylab("Average Slope") +
xlab("Sensorimotor Reaction Time (s)")
ggplot(task.data, aes(x=mean.rt, y=average.slope, color=age)) +
geom_smooth(method=lm, color='gray') +
geom_point(size=1.2) +
scale_color_viridis() +
labs(color='Age') +
theme_bw() +
theme(axis.text.y = element_text(face="bold", size=6, angle=90),
axis.text.x = element_text(face="bold", size=6),
legend.position = 'bottom') +
ylab("Average Slope") +
xlab("Sensorimotor Reaction Time (s)")
ggplot(task.data, aes(x=mean.rt, y=average.slope, color=age)) +
geom_smooth(method=lm, color='gray') +
geom_point(size=1.2) +
scale_color_viridis() +
labs(color='Age\n') +
theme_bw() +
theme(axis.text.y = element_text(face="bold", size=6, angle=90),
axis.text.x = element_text(face="bold", size=6),
legend.position = 'bottom') +
ylab("Average Slope") +
xlab("Sensorimotor Reaction Time (s)")
ggplot(task.data, aes(x=age, y=average.slope, color=age)) +
geom_smooth(method=lm, color='gray') +
labs(y = "Average Slope", color='Age\n', x = "Age (years)") +
geom_point(size=1.2, show.legend = FALSE) +
scale_color_viridis() +
theme_bw() +
theme(axis.text.y = element_text(face="bold", size=6, angle=90),
axis.text.x = element_text(face="bold", size=6),
legend.position = 'bottom')
ggplot(task.data, aes(x=age, y=average.slope, color=age)) +
geom_smooth(method=lm, color='gray') +
labs(y = "Average Slope", color='Age\n', x = "Age (years)") +
geom_point(size=1.2, show.legend = FALSE) +
scale_color_viridis() +
theme_bw() +
theme(axis.text.y = element_text(face="bold", size=6, angle=90),
axis.text.x = element_text(face="bold", size=6),
legend.position = 'bottom') +
scale_x_continuous(expand=c(0,0))
both.data %$% ftm_tex(apa(cor.test(average.slope.rest, average.slope.task, method='p'), format='text'))
# for plotting:
library(png)
library(grid)
library(gridExtra)
library(jpeg)
library(ggplot2)
library(viridis)
# for printing
library(apa)
library(stringr)
# for data processing:
library(readr)
library(stringr)
library(dplyr)
library(tidyr)
library(magrittr)
# load the data for the two MEG recordings
task.data <- read_csv('../csv/task.csv') %>%
filter(removed_elecs < 0.2*204)
rest.data <- read_csv('../csv/rest.csv') %>%
filter(removed_elecs < 0.2*204)
both.data <- inner_join(task.data, rest.data, by=c('pid', 'sex', 'age'), suffix=c('.task', '.rest'))
# add the MEG behavioral data
task.data <- inner_join(task.data, read_csv('../csv/megbehavior.csv'))
# add the VSTM behavioral data
task.data <- read_csv('../csv/vstm-behavior.csv') %>%
rename(pid = CCID) %>%
mutate(Prcsn_ss4 = as.numeric(Prcsn_ss4)) %>%
inner_join(task.data)
# load the spectrum data for age split:
age.split.spectra <- read_csv('../csv/agesplit-spectra.csv') %>%
gather(frequency, power, -pid, -group) %>%
mutate(frequency = as.numeric(frequency)) %>%
mutate(group = str_replace(group, 'old', 'Oldest 25%')) %>%
mutate(group = str_replace(group, 'young', 'Youngest 25%'))
# load the vstm behavior data'vstm-behavior.csv'
fmt_tex <- function(text){
str_replace(paste0("$", text, "$"), ', ', '$, $')
}
rest.slope.task.cor <- both.data %$% ftm_tex(apa(cor.test(average.slope.rest, average.slope.task, method='p'), format='text'))
rest.slope.task.cor <- both.data %$% fmt_tex(apa(cor.test(average.slope.rest, average.slope.task, method='p'), format='text'))
rest.slope.task.cor
age.slope.cor <- task.data %$% cor.test(age, average.slope, method='p') %>% fmt_tex()
rt.slope.cor <- task.data %$% cor.test(mean.rt, average.slope, method='p') %>% fmt_tex()
vstm.slope.cor <- task.data %$% cor.test(Prcsn_ss4, average.slope, method='p') %>% fmt_tex()
rest.slope.task.cor <- both.data %$% task.data %$% cor.test(average.slope.rest, average.slope.task, method='p') %>% fmt_tex()
rest.slope.task.cor <- both.data %$% cor.test(average.slope.rest, average.slope.task, method='p') %>% fmt_tex()
rest.slope.task.cor
apa(cor.test(average.slope.rest, average.slope.task, method='p'), format='text')
both.data %$% apa(cor.test(average.slope.rest, average.slope.task, method='p'), format='text')
fmt_tex <- function(text){
str_replace(paste0("$", apa(text, format='text'), "$"), ', ', '$, $')
}
rest.slope.task.cor <- both.data %$% cor.test(average.slope.rest, average.slope.task, method='p') %>% fmt_tex()
rest.slope.task.cor
task.data %$% cor.test(age, average.intercept, method='p')
task.data %$% cor.test(age, average.intercept, method='p')
# for plotting:
library(png)
library(grid)
library(gridExtra)
library(jpeg)
library(ggplot2)
library(viridis)
# for printing
library(apa)
library(stringr)
# for data processing:
library(readr)
library(stringr)
library(dplyr)
library(tidyr)
library(magrittr)
# load the data for the two MEG recordings
task.data <- read_csv('../csv/task.csv') %>%
filter(removed_elecs < 0.2*204)
rest.data <- read_csv('../csv/rest.csv') %>%
filter(removed_elecs < 0.2*204)
both.data <- inner_join(task.data, rest.data, by=c('pid', 'sex', 'age'), suffix=c('.task', '.rest'))
# add the MEG behavioral data
task.data <- inner_join(task.data, read_csv('../csv/megbehavior.csv'))
# add the VSTM behavioral data
task.data <- read_csv('../csv/vstm-behavior.csv') %>%
rename(pid = CCID) %>%
mutate(Prcsn_ss4 = as.numeric(Prcsn_ss4)) %>%
inner_join(task.data)
# load the spectrum data for age split:
age.split.spectra <- read_csv('../csv/agesplit-spectra.csv') %>%
gather(frequency, power, -pid, -group) %>%
mutate(frequency = as.numeric(frequency)) %>%
mutate(group = str_replace(group, 'old', 'Oldest 25%')) %>%
mutate(group = str_replace(group, 'young', 'Youngest 25%'))
# load the vstm behavior data'vstm-behavior.csv'
# helper function
fmt_tex <- function(text){
str_replace(paste0("$", apa(text, format='text'), "$"), ', ', '$, $')
}
age.slope.cor <- task.data %$% cor.test(age, average.slope, method='p') %>% fmt_tex()
rt.slope.cor <- task.data %$% cor.test(mean.rt, average.slope, method='p') %>% fmt_tex()
vstm.slope.cor <- task.data %$% cor.test(Prcsn_ss4, average.slope, method='p') %>% fmt_tex()
rest.slope.task.cor <- both.data %$% cor.test(average.slope.rest, average.slope.task, method='p') %>% fmt_tex()
p <- ggplot(task.data, aes(x=age, y=average.slope, color=age)) +
geom_smooth(method=lm, color='gray') +
labs(y = "Average Slope", color='Age\n', x = "Age (years)") +
geom_point(size=1.2, show.legend = FALSE) +
scale_color_viridis() +
theme_bw() +
scale_x_continuous(expand = c(0, 0)) +
theme(axis.text.y = element_text(face="bold", size=6, angle=90),
axis.text.x = element_text(face="bold", size=6),
legend.position = 'bottom')
p
p <- ggplot(task.data, aes(x=mean.rt, y=average.slope, color=age)) +
geom_smooth(method=lm, color='gray') +
geom_point(size=1.2, show.legend=FALSE) +
scale_color_viridis() +
labs(x = "Sensorimotor Reaction Time (s)", y = "Average Slope", color='Age\n') +
theme_bw() +
scale_x_continuous(expand = c(0, 0)) +
theme(axis.text.y = element_text(face="bold", size=6, angle=90),
axis.text.x = element_text(face="bold", size=6),
legend.position = 'bottom')
p
p <- ggplot(age.split.spectra, aes(x=frequency, y=power, group=group, color=group)) +
stat_summary(fun.y='mean', geom = 'line') +
geom_ribbon(stat='summary', fun.data='mean_se',
aes(fill=group), alpha=0.3, size=0,
show.legend = FALSE) +
labs(group = '', x = 'Frequency', y = 'Power') +
theme_bw() +
scale_x_continuous(expand = c(0, 0)) +
theme(axis.text.y = element_text(face="bold", size=6, angle=90),
axis.text.x = element_text(face="bold", size=6),
legend.title = element_blank(),
legend.position = c(0.7, 0.85),
legend.background = element_blank(),
legend.box.background = element_blank())
p
rest.slope.task.cor
age.slope.cor
age.slope.cor <- task.data %$% cor.test(age, average.slope, method='p') %>% fmt_tex()
age.intercept.cor <- task.data %$% cor.test(age, average.intercept, method='p') %>% fmt_tex()
rt.slope.cor <- task.data %$% cor.test(mean.rt, average.slope, method='p') %>% fmt_tex()
vstm.slope.cor <- task.data %$% cor.test(Prcsn_ss4, average.slope, method='p') %>% fmt_tex()
rest.slope.task.cor <- both.data %$% cor.test(average.slope.rest, average.slope.task, method='p') %>% fmt_tex()
age.intercept.cor
library(ggplot2)
qplot(mpg, data=mtcars, geom="density", fill=gear, alpha=I(.5),
main="Distribution of Gas Milage", xlab="Miles Per Gallon",
ylab="Density")
mtcars$gear <- factor(mtcars$gear,levels=c(3,4,5),
labels=c("3gears","4gears","5gears"))
qplot(mpg, data=mtcars, geom="density", fill=gear, alpha=I(.5),
main="Distribution of Gas Milage", xlab="Miles Per Gallon",
ylab="Density")
viridis(0.9)
library(viridis)
viridis(0.9)
viridis(0.75)
viridis(0.1)
?viridis
?viridis()
viridis(125)
viridis(100)[25]
viridis(100)[25, 75]
viridis(100)[25]
viridis(100)[75]
age.split.spectra <- read_csv('../csv/agesplit-spectra.csv') %>%
gather(frequency, power, -pid, -group) %>%
mutate(frequency = as.numeric(frequency)) %>%
mutate(group = str_replace(group, 'old', 'Oldest 25%')) %>%
mutate(group = str_replace(group, 'young', 'Youngest 25%')) %>%
mutate(group = as.factor(group, levels=c('Youngest 25%', 'Oldest 25%')))
# for plotting:
library(png)
library(grid)
library(gridExtra)
library(jpeg)
library(ggplot2)
library(viridis)
# for printing
library(apa)
library(stringr)
# for data processing:
library(readr)
library(stringr)
library(dplyr)
library(tidyr)
library(magrittr)
age.split.spectra <- read_csv('../csv/agesplit-spectra.csv') %>%
gather(frequency, power, -pid, -group) %>%
mutate(frequency = as.numeric(frequency)) %>%
mutate(group = str_replace(group, 'old', 'Oldest 25%')) %>%
mutate(group = str_replace(group, 'young', 'Youngest 25%')) %>%
mutate(group = as.factor(group, levels=c('Youngest 25%', 'Oldest 25%')))
as.factor?
?as.factor
read_csv('../csv/agesplit-spectra.csv') %>%
gather(frequency, power, -pid, -group) %>%
mutate(frequency = as.numeric(frequency)) %>%
mutate(group = str_replace(group, 'old', 'Oldest 25%')) %>%
mutate(group = str_replace(group, 'young', 'Youngest 25%')) %>%
mutate(group = as.factor(group, c('Youngest 25%', 'Oldest 25%')))
age.split.spectra <- read_csv('../csv/agesplit-spectra.csv') %>%
gather(frequency, power, -pid, -group) %>%
mutate(frequency = as.numeric(frequency)) %>%
mutate(group = str_replace(group, 'old', 'Oldest 25%')) %>%
mutate(group = str_replace(group, 'young', 'Youngest 25%')) %>%
mutate(group = as.factor(x = group, c('Youngest 25%', 'Oldest 25%')))
read_csv('../csv/agesplit-spectra.csv') %>%
gather(frequency, power, -pid, -group) %>%
mutate(frequency = as.numeric(frequency)) %>%
mutate(group = str_replace(group, 'old', 'Oldest 25%')) %>%
mutate(group = str_replace(group, 'young', 'Youngest 25%')) %>%
mutate(group = factor(group, levels = c('Youngest 25%', 'Oldest 25%')))
age.split.spectra <- read_csv('../csv/agesplit-spectra.csv') %>%
gather(frequency, power, -pid, -group) %>%
mutate(frequency = as.numeric(frequency)) %>%
mutate(group = str_replace(group, 'old', 'Oldest 25%')) %>%
mutate(group = str_replace(group, 'young', 'Youngest 25%')) %>%
mutate(group = factor(group, levels = c('Youngest 25%', 'Oldest 25%')))
viridis(2, begin=0.25, end=0.75)
viridis(100)[25]
viridis(100)[75]
